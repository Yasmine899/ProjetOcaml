(* Read a graph from a file,
 * Write a graph to a file. *)

 open Graph

 type path = string
 
 val compute_x : id -> id
 
 (** Compute the y-coordinate based on the given id. *)
 val compute_y : id -> id
 
 type data =
 { employees: string list ;
   jobs: string list ;
   preferences: (string * string) list }
 
 (* Values are read as strings. *)
 val from_file: path -> data
 
 (* Similarly, we write only a string graph.
  * If necessary, use gmap (to be written by you) to prepare the input graph. *)
 (*val write_file: path -> string graph -> umake build
    nit*)
 
 val export: path -> string graph -> unit
 (* The format of files is compatible with the files generated by:
    https://algorithms.discrete.ma.tum.de/graph-algorithms/flow-ford-fulkerson/index_en.html
 *)
 val employee_jobs_list : data -> (string * int) list
 
 val read_node : int graph -> data -> int graph
 val read_arc : int graph -> data -> int graph
 val src_employee : data -> int graph -> int graph
 val jobs_tgt : data -> int graph -> int graph
 val source_node : int graph -> int graph
 val destination_node : int graph -> int graph 